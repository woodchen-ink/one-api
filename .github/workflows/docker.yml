name: Docker

on:
  push:
    branches:
      - main
    tags:
      - "v*"

env:
  DOCKER_HUB_USERNAME: woodchen
  DOCKER_HUB_REPO: czloapi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22.4.1
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            web/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 构建前端
        env:
          CI: ""
        run: |
          cd web
          yarn install
          VITE_APP_VERSION=$VERSION yarn run build
          cd ..
      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: 构建后端 (amd64)
        run: |
          go mod download
          go build -ldflags "-s -w -extldflags '-static'" -o one-api-amd64

      # - name: 构建后端 (arm64)
      #   run: |
      #     sudo rm /etc/apt/sources.list.d/microsoft-prod.list
      #     sudo apt-get update
      #     sudo apt-get install gcc-aarch64-linux-gnu
      #     CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -ldflags "-s -w -extldflags '-static'" -o one-api-arm64
      - name: 设置QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Docker元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPO }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: 构建并推送
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64 #,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile-action
          
      - name: 部署到服务器
        uses: appleboy/ssh-action@master
        env:
          DOCKER_IMAGE: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPO }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: DOCKER_IMAGE,PROJECT_PATH
          script: |
            docker pull $DOCKER_IMAGE
            cd $PROJECT_PATH
            docker compose down
            docker compose up -d
